{"version":3,"file":"static/js/607.2ec877e9.chunk.js","mappings":"sMACAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,MAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAcC,UACvB,MAAM,KAAEC,SAAeR,EAAAA,EAAAA,IACnB,oCACAC,GAEJ,OAAOO,EAAKC,OAAO,EAGVC,EAAoBH,UAC7B,MAAM,KAAEC,SAAeR,EAAAA,EAAAA,IAAU,UAADW,OAClBC,GACVX,GAEJ,OAAOO,CAAI,EAGFK,EAAgBN,UACzB,MAAM,KAAEC,SAAeR,EAAAA,EAAAA,IAAU,SAADW,OACnBC,EAAE,YACXX,GAEJ,OAAOO,EAAKM,IAAI,EAGPC,EAAkBR,UAC3B,MAAM,KAAEC,SAAeR,EAAAA,EAAAA,IAAU,SAADW,OACnBC,EAAE,YACXX,GAEJ,OAAOO,EAAKC,OAAO,EAGVO,EAAoBT,UAC7B,MAAM,KAAEC,SAAeR,EAAAA,EAAAA,IAAU,sBAADW,OACVM,EAAI,8CACtBhB,GAEJ,OAAOO,CAAI,C,+FC9CR,MAAMU,EAAeC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oQAyBxBC,IAVaH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,sCAIdF,EAAAA,EAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gFAMHF,EAAAA,EAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,0EAM3BM,EAAsBR,EAAAA,EAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,qFAMhCQ,EAAYV,EAAAA,EAAAA,GAASW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,qGAOrBU,EAAmBZ,EAAAA,EAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,wEAM7BY,EAAoBd,EAAAA,EAAAA,EAAQe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,oC,aCtCzC,MAwCA,EAxCkBc,IAAiB,IAAhB,OAAEC,GAAQD,EAEzB,MAAME,GAAWC,EAAAA,EAAAA,MAEjB,OACIC,EAAAA,EAAAA,KAAA,WAAAC,UACID,EAAAA,EAAAA,KAACrB,EAAY,CAAAsB,SACRJ,EAAOK,KACJC,IAAA,IAAC,GACG9B,EAAE,eACF+B,EAAc,aACdC,EAAY,YACZC,EAAW,aACXC,GACHJ,EAAA,OACGH,EAAAA,EAAAA,KAAA,MAAAC,UACIO,EAAAA,EAAAA,MAACxB,EAAAA,GAAI,CAACyB,GAAE,WAAArC,OAAaC,GAAMqC,MAAO,CAAEC,KAAMb,GAAYc,MAAO,CAACC,eAAe,QAAQZ,SAAA,EACjFD,EAAAA,EAAAA,KAACjB,EAAc,CACX+B,IAAKR,EAAW,mCAAAlC,OACuBkC,GACnC,4FACJS,IAAKX,KAETJ,EAAAA,EAAAA,KAAA,OAAAC,UACIO,EAAAA,EAAAA,MAACpB,EAAmB,CAAAa,SAAA,EAChBD,EAAAA,EAAAA,KAACV,EAAS,CAAAW,SAAEG,KACZI,EAAAA,EAAAA,MAAChB,EAAgB,CAAAS,SAAA,EACbD,EAAAA,EAAAA,KAACN,EAAiB,CAAAO,SAAEI,EAAaW,MAAM,EAAG,MAC1CR,EAAAA,EAAAA,MAACd,EAAiB,CAAAO,SAAA,CAAmB,IAAjBM,EAAqB,IAAMA,EAAaU,QAAQ,GAAG,8BAblF5C,EAkBJ,OAGX,C,mEClDlB,QAA4B,8BAA5B,EAA8E,sC,0BCCvE,MAAM6C,EAAmBtC,EAAAA,EAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sOAgB9BqC,EAAevC,EAAAA,EAAAA,OAAaK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qV,aCdzC,MA6BA,EA7BmBc,IAAuB,IAAtB,aAAEwB,GAAcxB,EAElC,MAAOyB,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAM7BC,EAAYC,IAChBA,EAAMC,iBACFL,GACJD,EAAaC,EAAM,EAGrB,OACErB,EAAAA,EAAAA,KAAA,OAAK2B,UAAWC,EAAoB3B,UACpCO,EAAAA,EAAAA,MAACU,EAAgB,CAACM,SAAUA,EAASvB,SAAA,EACnCD,EAAAA,EAAAA,KAAA,SACE6B,KAAK,OACLC,YAAY,SACZT,MAAOA,EACPU,SAjBgBN,IACpBH,EAASG,EAAMO,OAAOX,MAAM,KAkB1BrB,EAAAA,EAAAA,KAACmB,EAAY,CAACU,KAAK,SAASF,UAAWC,EAA6BK,QAAST,QAEzE,E,gCC3BH,MAAMU,EAAmBtD,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wHCwCzC,EAhCmBqD,KACjB,MAAOtC,EAAQuC,IAAab,EAAAA,EAAAA,UAAS,KAC9Bc,EAAYC,IAAiBC,EAAAA,EAAAA,OAEpCC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQJ,EAAWK,IAAI,SACxBD,IAELhE,EAAAA,EAAAA,IAAkBgE,GACfE,MAAK/C,IAAkB,IAAjB,QAAE1B,GAAS0B,EAChBwC,EAAUlE,GACV0E,QAAQC,IAAI3E,EAAQ,IAErB4E,OAAM,KACLC,EAAAA,OAAAA,QAAe,uBAAuB,GACtC,GACH,CAACV,IAMJ,OACE7B,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAA/C,SAAA,EACED,EAAAA,EAAAA,KAACkC,EAAgB,CAAAjC,SAAC,+BAClBD,EAAAA,EAAAA,KAACiD,EAAU,CAAC7B,aAPM8B,IACpBZ,EAAc,CAAEY,SAAQ,KAOtBlD,EAAAA,EAAAA,KAACmD,EAAAA,EAAS,CAACtD,OAAQA,MAClB,C","sources":["api-service/trending-service.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","webpack://react-homework-templateee/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/MoviesPage.styled.jsx","pages/Movies/MoviesPage.jsx"],"sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NGJmYmIyNTA2NmM5ZTJhNjhkNzA0NmFkNTgxYjBlYyIsInN1YiI6IjY1NmI0YTY5MDg1OWI0MDEzOTUxMmZhMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JHtQht9lLzVGn8qQlSLZwC1_-cT8AoKj26qDOrlg0qc',\n  },\n};\n\nexport const getTrending = async () => {\n    const { data } = await axios.get(\n        'trending/movie/day?language=en-US',\n        options\n    );\n    return data.results;\n    };\n\nexport const getDetailInfoById = async (id) => {\n    const { data } = await axios.get(\n        `/movie/${id}`,\n        options\n    );\n    return data;\n}\n\nexport const getActorsList = async (id) => {\n    const { data } = await axios.get(\n        `movie/${id}/credits`,\n        options\n    );\n    return data.cast;\n}\n\nexport const getMovieReviews = async (id) => {\n    const { data } = await axios.get(\n        `movie/${id}/reviews`,\n        options\n    );\n    return data.results;\n}\n\nexport const SearchMovieByName = async (name) => {\n    const { data } = await axios.get(\n    `search/movie?query=${name}&include_adult=false&language=en-US&page=1`,\n        options\n    );\n    return data;\n}\n\n","import styled from '@emotion/styled';\nimport { Link } from \"react-router-dom\";\n\nexport const FlexItemList = styled.ul`\nlist-style: none;\ndisplay: flex;\nflex-wrap: wrap;\nflex-direction: row;\njustify-content: space-between;\npadding: 0 40px 0 40px;\ncolumn-gap: 15px;\nrow-gap: 15px;\nmargin-right: 73px;\nmax-width: 1400px;\nmargin-right: auto;\nmargin-left: auto;\n`;\n\nexport const StyledLink = styled(Link)`\n    text-decoration: none;\n`;\n\nexport const FlexItem = styled.li`\n    display: flex;\n    width: 300px !important;\n    height: 550px;\n`;\n\nexport const FilmTitleImage = styled.img`\n    border-radius: 9%;\n    width: 300px;\n    height: 450px;\n`;\n\nexport const FlexItemDescription = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n`;\n\nexport const TitleFilm = styled.h2`\n    display: flex;\n    flex-wrap: wrap;\n    max-width: 289px;\n    color: antiquewhite;\n`;\n\nexport const ShellForItemText = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 20px;\n`;\n\nexport const FlexItemTextStyle = styled.p`\n    color: antiquewhite;\n`;\n\n","import React from 'react';  //, { useState, useEffect } \nimport { useLocation,  Link } from 'react-router-dom'; //useParams,\n// import { Notify } from 'notiflix';\n// import { getDetailInfoById } from 'api-service/trending-service';\nimport {\n    FlexItemList,\n    // StyledLink,\n    FilmTitleImage,\n    FlexItemDescription,\n    TitleFilm,\n    ShellForItemText,\n    FlexItemTextStyle\n} from \"./MovieList.styled\";\n\n\nconst MovieList = ({ movies }) => {\n    \n    const location = useLocation();\n    \n    return (      \n        <section>\n            <FlexItemList>\n                {movies.map(\n                    ({\n                        id,\n                        original_title,\n                        release_date,\n                        poster_path,\n                        vote_average,         \n                    }) => ( \n                        <li key={id}>\n                            <Link to={`/movies/${id}`} state={{ from: location }} style={{textDecoration:'none'}}>\n                                <FilmTitleImage\n                                    src={poster_path ? \n                                        `https://image.tmdb.org/t/p/w300/${poster_path}` : \n                                        'https://thefutureofthings.com/wp-content/uploads/2021/01/cinema-4153289_1280-1024x660.jpg'}\n                                    alt={original_title}\n                                />\n                                <div>\n                                    <FlexItemDescription>\n                                        <TitleFilm>{original_title}</TitleFilm>\n                                        <ShellForItemText>\n                                            <FlexItemTextStyle>{release_date.slice(0, 4)}</FlexItemTextStyle>\n                                            <FlexItemTextStyle>{vote_average === 0 ? '-' : vote_average.toFixed(1)}üèÜ</FlexItemTextStyle>\n                                        </ShellForItemText>                    \n                                    </FlexItemDescription>\n                                </div>\n                            </Link>\n                        </li>)\n                )}\n            </FlexItemList>      \n        </section>      \n    );\n};\n\nexport default MovieList;\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"SearchForm_Container__XKxue\",\"SearchForm-button\":\"SearchForm_SearchForm-button__IrjWW\"};","import styled from \"@emotion/styled\";\n\nexport const SearchFormCustom = styled.form`\nposition: relative;\nwidth: 25%;\n\n input {\n  width: 100%;\n  height: 42px;\n  padding-left: 10px;\n  border: 2px solid #7BA7AB;\n  border-radius: 5px;\n  outline: none;\n  background: #F9F0DA;\n  color: #9E9C9C; \n}\n`;\n\nexport const SearchButton = styled.button`\n    position: absolute;\n    top: 0;\n    right: -14px;\n    width: 45px;\n    height: 100%;\n    rotate: 270deg;\n    border: none;\n    border-radius: 0 5px 5px 0;\n    background-image: url('../../PngImages/search.png');\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;  \n\n`;\n\n","import React, { useState } from \"react\";\nimport styles from \"./SearchForm.module.css\";\nimport { SearchFormCustom, SearchButton } from \"./SearchForm.styled\";\n\nconst SearchForm = ({ handleSubmit }) => {\n\n  const [value, setValue] = useState('');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if(!value) return;\n    handleSubmit(value);\n  }\n\n  return (\n    <div className={styles['Container']}>\n    <SearchFormCustom onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        value={value}\n        onChange={handleChange}        \n      />\n      <SearchButton type=\"submit\" className={styles['SearchForm-button']} onClick={onSubmit} />\n      </SearchFormCustom>\n    </div>\n  )\n}\n\nexport default SearchForm;","import styled from \"@emotion/styled\";\n\nexport const MovieHeaderTitle = styled.h2`\n  max-width: 1400px;\n  padding: 0 0 0 15px;\n  margin-right: auto;\n  margin-left: auto;\n  color: #8e8e8b;\n`;","import React, { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport SearchForm from \"components/SearchForm/SearchForm\";\nimport MovieList from \"components/MovieList/MovieList\";\n\nimport { SearchMovieByName } from \"api-service/trending-service\";\nimport { Notify } from \"notiflix\";\nimport { MovieHeaderTitle } from \"./MoviesPage.styled\";\n\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchInfo, setSearchInfo] = useSearchParams();\n\n  useEffect(() => {\n    const movie = searchInfo.get('query');\n    if (!movie) return;\n\n    SearchMovieByName(movie)\n      .then(({ results }) => {\n        setMovies(results);\n        console.log(results);\n      })\n      .catch(() => {\n        Notify.failure('Something went wrong');\n      });\n  }, [searchInfo]);\n\n  const handleSubmit = (query) => {\n    setSearchInfo({ query });\n  };\n\n  return (\n    <>\n      <MovieHeaderTitle>What do you want to find?</MovieHeaderTitle>\n      <SearchForm handleSubmit={handleSubmit} />      \n      <MovieList movies={movies} />\n    </>\n  );\n};\n\n\nexport default MoviesPage;\n\n\n\n\n\n"],"names":["axios","options","method","headers","accept","Authorization","getTrending","async","data","results","getDetailInfoById","concat","id","getActorsList","cast","getMovieReviews","SearchMovieByName","name","FlexItemList","styled","_templateObject","_taggedTemplateLiteral","FilmTitleImage","Link","_templateObject2","_templateObject3","_templateObject4","FlexItemDescription","_templateObject5","TitleFilm","_templateObject6","ShellForItemText","_templateObject7","FlexItemTextStyle","_templateObject8","_ref","movies","location","useLocation","_jsx","children","map","_ref2","original_title","release_date","poster_path","vote_average","_jsxs","to","state","from","style","textDecoration","src","alt","slice","toFixed","SearchFormCustom","SearchButton","handleSubmit","value","setValue","useState","onSubmit","event","preventDefault","className","styles","type","placeholder","onChange","target","onClick","MovieHeaderTitle","MoviesPage","setMovies","searchInfo","setSearchInfo","useSearchParams","useEffect","movie","get","then","console","log","catch","Notify","_Fragment","SearchForm","query","MovieList"],"sourceRoot":""}