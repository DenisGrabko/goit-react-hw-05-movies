{"version":3,"file":"static/js/948.88661b94.chunk.js","mappings":"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","sources":["api-service/trending-service.js","components/SearchForm/SearchForm.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import axios from \"axios\";\n//axios.defaults.baseURL = 'https://api.themoviedb.org/3/trending/movie/day?language=en-US';\n\n// export const API_KEY = '8174f1744af1a46c4588fe70a373352a';\n// const API_KEY = process.env.REACT_APP_API_KEY;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n// axios.defaults.params = {\n//     api_key: API_KEY,\n// };\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NGJmYmIyNTA2NmM5ZTJhNjhkNzA0NmFkNTgxYjBlYyIsInN1YiI6IjY1NmI0YTY5MDg1OWI0MDEzOTUxMmZhMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JHtQht9lLzVGn8qQlSLZwC1_-cT8AoKj26qDOrlg0qc',\n  },\n};\n\nexport const getTrending = async () => {\n\n    const { data } = await axios.get(\n        'trending/movie/day?language=en-US',\n        options\n    );\n    return data.results;\n    };\n\nexport const getDetailInfoById = async (id) => {\n    const { data } = await axios.get(\n        `/movie/${id}`,\n        options\n    );\n    return data;\n}\n\nexport const getActorsList = async (id) => {\n    const { data } = await axios.get(\n        `movie/${id}/credits`,\n        options\n    );\n    return data.cast;\n}\n\nexport const getMovieReviews = async (id) => {\n    const { data } = await axios.get(\n        `movie/${id}/reviews`,\n        options\n    );\n    return data.results;\n}\n\nexport const SearchMovieByName = async (name) => {\n    const { data } = await axios.get(\n    `search/movie?query=${name}&include_adult=false&language=en-US&page=1`,\n        options\n    );\n    return data;\n}\n\n// import axios from \"axios\";\n\n// const KEY = '8174f1744af1a46c4588fe70a373352a';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n// axios.defaults.params = {\n//   key: KEY,\n// };\n\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NGJmYmIyNTA2NmM5ZTJhNjhkNzA0NmFkNTgxYjBlYyIsInN1YiI6IjY1NmI0YTY5MDg1OWI0MDEzOTUxMmZhMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JHtQht9lLzVGn8qQlSLZwC1_-cT8AoKj26qDOrlg0qc',\n//   },\n// };\n\n// export const getTrending = async () => {\n//   const { data } = await axios.get('trending/movie/day?language=en-US', options);\n//   return data.results;\n// };\n\n// export const getDetailInfoById = async (id) => {\n//   const { data } = await axios.get(`/movie/${id}`, options);\n//   return data;\n// };\n\n// export const getActorsList = async (id) => {\n//   const { data } = await axios.get(`movie/${id}/credits`, options);\n//   return data.cast;\n// };\n\n// export const getMovieReviews = async (id) => {\n//   const { data } = await axios.get(`movie/${id}/reviews`, options);\n//   return data.results;\n// };\n\n// export const SearchMovieByName = async (name) => {\n//   const { data } = await axios.get(`search/movie?query=${name}&include_adult=false&language=en-US&page=1`, options);\n//   return data;\n// };","import React, { useState } from \"react\";\n\nconst SearchForm = ({ handleSubmit }) => {\n\n  const [value, setValue] = useState('');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    console.log(value);\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    handleSubmit(value);\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        value={value}\n        onChange={handleChange}\n      />\n    </form>\n  )\n}\n\nexport default SearchForm;","import styled from '@emotion/styled';\nimport { Link } from \"react-router-dom\";\n\nexport const FlexItemList = styled.ul`\nlist-style: none;\ndisplay: flex;\nflex-wrap: wrap;\nflex-direction: row;\njustify-content: space-between;\ncolumn-gap: 15px;\nrow-gap: 15px;\nmargin-right: 73px;\n`;\n\nexport const StyledLink = styled(Link)`\n    text-decoration: none;\n`;\n\nexport const FlexItem = styled.li`\n    display: flex;\n    width: 300px !important;\n    height: 550px;\n`;\n\nexport const FilmTitleImage = styled.img`\n    border-radius: 9%;\n`;\n\nexport const FlexItemDescription = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n`;\n\nexport const TitleFilm = styled.h2`\n    display: flex;\n    flex-wrap: wrap;\n    max-width: 289px;\n    color: antiquewhite;\n`;\n\nexport const ShellForItemText = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 20px;\n`;\n\nexport const FlexItemTextStyle = styled.p`\n    color: antiquewhite;\n`;\n\n","import React from 'react';   //{ useState, useEffect }\n// import { useLocation, useParams } from 'react-router-dom';\n// import { Notify } from 'notiflix';\n// import { getDetailInfoById } from 'api-service/trending-service';\nimport {\n    FlexItemList,\n    StyledLink,\n    FilmTitleImage,\n    FlexItemDescription,\n    TitleFilm,\n    ShellForItemText,\n    FlexItemTextStyle\n} from \"./MovieList.styled\";\n\n\nconst MovieList = ({ movies }) => {\n    // const [movie, setMovie] = useState(null);\n    // const { movieId } = useParams();\n    // const location = useLocation();\n\n    // useEffect(() => {\n    //     getDetailInfoById(movieId)\n    //         .then(setMovie);\n    \n    //   return () => {\n    //       Notify.failure('Something went wrong');\n    //   }\n    // }, [movieId])\n         \n\n\n  return (      \n      <section>\n      <FlexItemList>\n        {movies.map(\n          ({\n            id,\n            original_title,\n            release_date,\n            poster_path,\n            vote_average,          \n          }) => ( \n            <li key={id}>\n                    <StyledLink to={`movies/:${id}`}>   {/* state={{from: location} */}\n                <FilmTitleImage\n                  src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n                  alt={original_title}\n                  >                  \n                </FilmTitleImage>\n                <div>\n                  <FlexItemDescription>\n                    <TitleFilm>{original_title}</TitleFilm>\n                    <ShellForItemText>\n                      <FlexItemTextStyle>{release_date.slice(0, 4)}</FlexItemTextStyle>\n                      <FlexItemTextStyle>{vote_average === 0 ? '-' : vote_average.toFixed(1)}üèÜ</FlexItemTextStyle>\n                    </ShellForItemText>                    \n                  </FlexItemDescription>\n                </div>\n              </StyledLink>\n            </li>)\n        )}\n      </FlexItemList>      \n    </section>      \n  )\n}\nexport default MovieList;","import React, { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport SearchForm from \"components/SearchForm/SearchForm\";\nimport MovieList from \"components/MovieList/MovieList\";\n\nimport { SearchMovieByName } from \"api-service/trending-service\";\nimport { Notify } from \"notiflix\";\n\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchInfo, setSearchInfo] = useSearchParams();\n\n  useEffect(() => {\n    const movie = searchInfo.get('query');\n    if (!movie) return;\n\n    SearchMovieByName(movie)\n      .then(({ results }) => {\n        setMovies(results);\n        console.log(results);\n      })\n      .catch(() => {\n        Notify.failure('Something went wrong');\n      });\n  }, [searchInfo]);\n\n  const handleSubmit = (query) => {\n    if (!query) return;\n    setSearchInfo({ query: query });\n  };\n\n  return (\n    <>\n      <h2>What do you want to find?</h2>\n      <SearchForm handleSubmit={handleSubmit} />\n      \n      <MovieList movies={movies} />\n    </>\n  );\n};\n\n\nexport default MoviesPage;\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import SearchForm from 'components/Movies/SearchForm/SearchForm';\n// import MovieList from 'components/MovieList/MovieList';\n// import { SearchMovieByName } from 'api-service/trending-service';\n\n// const MoviesPage = () => {\n//   const [movies, setMovies] = useState([]);\n//   const [searchInfo, setSearchInfo] = useSearchParams();\n\n//   useEffect(() => {\n//     const movie = searchInfo.get('query');\n\n//     if (!movie) return;\n\n    \n//     SearchMovieByName(movie)\n//       .then(({ results }) => {\n//         setMovies(results);\n//       })\n//       .catch(() => {\n//         Notify.failure('Opps. Something went wrong. Please refresh the page');\n//       })\n      \n//   }, [searchInfo]);\n\n//   const handleSubmit = query => {\n//     if (!query) return;\n//     setSearchInfo({ query: query });\n//   };\n\n//   return (\n//     <>\n//       <div>\n//         <div>\n//           <h2>What do you want to watch?</h2>\n//           <SearchForm handleSubmit={handleSubmit} />\n\n//           <MovieList movies={movies} />\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default MoviesPage;\n"],"names":["axios","options","method","headers","accept","Authorization","getTrending","async","data","results","getDetailInfoById","concat","id","getActorsList","cast","getMovieReviews","SearchMovieByName","name","_ref","handleSubmit","value","setValue","useState","_jsx","onSubmit","event","preventDefault","children","type","placeholder","onChange","target","console","log","FlexItemList","styled","_templateObject","_taggedTemplateLiteral","StyledLink","Link","_templateObject2","FilmTitleImage","_templateObject3","_templateObject4","FlexItemDescription","_templateObject5","TitleFilm","_templateObject6","ShellForItemText","_templateObject7","FlexItemTextStyle","_templateObject8","movies","map","_ref2","original_title","release_date","poster_path","vote_average","_jsxs","to","src","alt","slice","toFixed","MoviesPage","setMovies","searchInfo","setSearchInfo","useSearchParams","useEffect","movie","get","then","catch","Notify","_Fragment","SearchForm","query","MovieList"],"sourceRoot":""}