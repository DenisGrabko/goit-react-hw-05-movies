{"version":3,"file":"static/js/170.927c1977.chunk.js","mappings":"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","sources":["api-service/trending-service.js","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n//axios.defaults.baseURL = 'https://api.themoviedb.org/3/trending/movie/day?language=en-US';\n\n// export const API_KEY = '8174f1744af1a46c4588fe70a373352a';\n// const API_KEY = process.env.REACT_APP_API_KEY;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n// axios.defaults.params = {\n//     api_key: API_KEY,\n// };\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NGJmYmIyNTA2NmM5ZTJhNjhkNzA0NmFkNTgxYjBlYyIsInN1YiI6IjY1NmI0YTY5MDg1OWI0MDEzOTUxMmZhMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JHtQht9lLzVGn8qQlSLZwC1_-cT8AoKj26qDOrlg0qc',\n  },\n};\n\nexport const getTrending = async () => {\n    const { data } = await axios.get(\n        'trending/movie/day?language=en-US',\n        options\n    );\n    return data.results;\n    };\n\nexport const getDetailInfoById = async (id) => {\n    const { data } = await axios.get(\n        `/movie/${id}`,\n        options\n    );\n    return data;\n}\n\nexport const getActorsList = async (id) => {\n    const { data } = await axios.get(\n        `movie/${id}/credits`,\n        options\n    );\n    return data.cast;\n}\n\nexport const getMovieReviews = async (id) => {\n    const { data } = await axios.get(\n        `movie/${id}/reviews`,\n        options\n    );\n    return data.results;\n}\n\nexport const SearchMovieByName = async (name) => {\n    const { data } = await axios.get(\n    `search/movie?query=${name}&include_adult=false&language=en-US&page=1`,\n        options\n    );\n    return data;\n}\n\n// import axios from \"axios\";\n\n// const KEY = '8174f1744af1a46c4588fe70a373352a';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n// axios.defaults.params = {\n//   key: KEY,\n// };\n\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NGJmYmIyNTA2NmM5ZTJhNjhkNzA0NmFkNTgxYjBlYyIsInN1YiI6IjY1NmI0YTY5MDg1OWI0MDEzOTUxMmZhMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JHtQht9lLzVGn8qQlSLZwC1_-cT8AoKj26qDOrlg0qc',\n//   },\n// };\n\n// export const getTrending = async () => {\n//   const { data } = await axios.get('trending/movie/day?language=en-US', options);\n//   return data.results;\n// };\n\n// export const getDetailInfoById = async (id) => {\n//   const { data } = await axios.get(`/movie/${id}`, options);\n//   return data;\n// };\n\n// export const getActorsList = async (id) => {\n//   const { data } = await axios.get(`movie/${id}/credits`, options);\n//   return data.cast;\n// };\n\n// export const getMovieReviews = async (id) => {\n//   const { data } = await axios.get(`movie/${id}/reviews`, options);\n//   return data.results;\n// };\n\n// export const SearchMovieByName = async (name) => {\n//   const { data } = await axios.get(`search/movie?query=${name}&include_adult=false&language=en-US&page=1`, options);\n//   return data;\n// };","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const ContainerForMovieDetails = styled.li`\n  list-style-type: none;\n`;\n\nexport const BackgroundContainerImageMovie = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 600px;\n  list-style-type: none;\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    /* background: ${props => `url(${props.backdrop})`} center no-repeat;*/\n    background-size: cover; \n   \n    z-index: -1;\n  }\n`;\n\nexport const BackgroundImageMovie = styled.img`\n    width: 100%;\n    height: 100%; \n    filter: blur(7px);\n`;\n\nexport const SectionDetails = styled.section`\n    display: flex;\n    /* align-items: center; */\n    max-width: 1400px;\n    margin-right: auto;\n    margin-left: auto;\n    gap: 10px;\n`;\n\nexport const BackPathButton = styled(NavLink)`\n  color: grey;\n  text-decoration: none;\n`\nexport const CastElementList = styled.ul`\n     display: flex;\n     flex-direction: row;     \n     justify-content: space-between;\n     padding-left: 10px;\n     width: 200px;\n`;\n\nexport const CastElement = styled.li`\n    list-style-type: none;\n`;\n\nexport const CastLink = styled(NavLink)`\n    color: grey;\n    font-size: 2rem;\n    text-decoration: none;\n`;\n\nexport const ReviewsLink = styled(NavLink)`\n    color: grey;\n    font-size: 2rem;\n    text-decoration: none;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getDetailInfoById } from 'api-service/trending-service';\nimport { Notify } from 'notiflix';\nimport {\n    ContainerForMovieDetails,\n    BackgroundContainerImageMovie,\n    BackgroundImageMovie,\n    SectionDetails,\n    BackPathButton,\n    CastElementList,\n    CastElement,\n    CastLink,\n    ReviewsLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n    const [movieDetails, setMovieDetails] = useState(null);\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLink = location.state?.from ?? '/home';\n\n    useEffect(() => {\n        const fetchMovieDetails = async () => {\n            try {\n                const data = await getDetailInfoById(movieId);\n                console.log('data: >>', data);\n                setMovieDetails(data);\n            } catch (error) {\n                Notify.failure('Something went wrong');\n            }\n        };\n\n        fetchMovieDetails();\n    }, [movieId]);\n\n    return (\n        <>\n            {movieDetails && (\n                <ContainerForMovieDetails key={movieDetails.id}>\n                    <BackgroundContainerImageMovie>\n                        <BackgroundImageMovie src={`https://image.tmdb.org/t/p/w300/${movieDetails.backdrop_path}`}>\n                        </BackgroundImageMovie>\n                    </BackgroundContainerImageMovie>\n                    <SectionDetails>\n                        \n                        <img\n                            src={`https://image.tmdb.org/t/p/w300/${movieDetails.poster_path}`}\n                            alt={movieDetails.original_title}\n                        />\n                        <div>\n                            <div>\n                                <BackPathButton to={backLink}>Back</BackPathButton>\n                                <h2>{movieDetails.original_title}</h2>\n                                {movieDetails.runtime && <p>{movieDetails.runtime} min</p>}\n                                <div>\n                                    <p>{movieDetails.release_date.slice(0, 4)}</p>\n                                    <span>User Score: \n                                        {movieDetails.vote_average === 0\n                                            ? '-'\n                                            : movieDetails.vote_average.toFixed(1)}%🏆\n                                    </span>\n                                </div>\n                                <p>Overview: {movieDetails.overview}</p>\n                            </div>\n                        </div>\n                    </SectionDetails>\n                    <SectionDetails>\n                        <CastElementList>\n                            <CastElement>\n                                <CastLink to=\"cast\">Cast</CastLink>\n                            </CastElement>\n                            <CastElement>\n                                <ReviewsLink to=\"reviews\">Reviews</ReviewsLink>\n                            </CastElement>\n                        </CastElementList>\n                    </SectionDetails>\n                </ContainerForMovieDetails>\n            )}\n            <Outlet />\n        </>\n    );\n};\n\nexport default MovieDetails;\n\n//  const {\n//         id,\n//         backdrop_path,\n//         original_language,\n//         original_title,\n//         overview,\n//         poster_path,\n//         release_date,\n//         title,\n//         vote_average\n//     } = movies || [];\n\n\n// getDetailInfoById(movieId)\n//     .then(response => response.json())\n//     .then(data => { console.log(data); setData(data.results)})\n//     .catch(err => console.log(err));"],"names":["axios","options","method","headers","accept","Authorization","getTrending","async","data","results","getDetailInfoById","concat","id","getActorsList","cast","getMovieReviews","SearchMovieByName","name","ContainerForMovieDetails","styled","_templateObject","_taggedTemplateLiteral","BackgroundContainerImageMovie","_templateObject2","props","backdrop","BackgroundImageMovie","_templateObject3","SectionDetails","_templateObject4","BackPathButton","NavLink","_templateObject5","CastElementList","_templateObject6","CastElement","_templateObject7","CastLink","_templateObject8","ReviewsLink","_templateObject9","MovieDetails","_location$state$from","_location$state","movieDetails","setMovieDetails","useState","movieId","useParams","backLink","useLocation","state","from","useEffect","console","log","error","Notify","fetchMovieDetails","_jsxs","_Fragment","children","_jsx","src","backdrop_path","poster_path","alt","original_title","to","runtime","release_date","slice","vote_average","toFixed","overview","Outlet"],"sourceRoot":""}