{"version":3,"file":"static/js/359.ec4ca7fa.chunk.js","mappings":"sMAMAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAKzB,MAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAcC,UACvB,MAAM,KAAEC,SAAeR,EAAAA,EAAAA,IACnB,oCACAC,GAEJ,OAAOO,EAAKC,OAAO,EAGVC,EAAoBH,UAC7B,MAAM,KAAEC,SAAeR,EAAAA,EAAAA,IAAU,UAADW,OAClBC,GACVX,GAEJ,OAAOO,CAAI,EAGFK,EAAgBN,UACzB,MAAM,KAAEC,SAAeR,EAAAA,EAAAA,IAAU,SAADW,OACnBC,EAAE,YACXX,GAEJ,OAAOO,EAAKM,IAAI,EAGPC,EAAkBR,UAC3B,MAAM,KAAEC,SAAeR,EAAAA,EAAAA,IAAU,SAADW,OACnBC,EAAE,YACXX,GAEJ,OAAOO,EAAKC,OAAO,EAGVO,EAAoBT,UAC7B,MAAM,KAAEC,SAAeR,EAAAA,EAAAA,IAAU,sBAADW,OACVM,EAAI,8CACtBhB,GAEJ,OAAOO,CAAI,C,4GCvDR,MAAMU,EAAgBC,EAAAA,EAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uHAQ9BC,EAAaH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+FAOtBG,EAAaL,EAAAA,EAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sCAItBK,EAAWP,EAAAA,EAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wDAKpBO,EAAWT,EAAAA,EAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,6EAMpBS,EAAYX,EAAAA,EAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,0EAMtBW,EAAWb,EAAAA,EAAAA,EAAQc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,sE,aCjChC,MAiDA,EAjDaa,KACX,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACvC,QAAEC,IAAYC,EAAAA,EAAAA,MAgBpB,OAdAC,EAAAA,EAAAA,YAAU,KACgBjC,WACtB,IACE,MAAMkC,QAAe5B,EAAAA,EAAAA,IAAcyB,GAEnCF,EAAcK,EAGhB,CAFE,MAAOC,GACPC,QAAQD,MAAM,8BAA+BA,EAC/C,GAGFE,EAAiB,GAChB,CAACN,KAGAO,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAAC3B,EAAa,CAAA6B,UACVF,EAAAA,EAAAA,KAACvB,EAAU,CAAAyB,SAElBZ,EAAWa,KAAIC,IAAmD,IAAlD,UAAEC,EAAS,KAAEjC,EAAI,UAAEkC,EAAS,aAAEC,GAAcH,EAC3D,MAAMI,EAAaD,EAAY,kCAAAzC,OACOyC,GAClC,uIAEF,OACEP,EAAAA,EAAAA,KAACrB,EAAU,CAAAuB,UACPF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACnB,EAAQ,CAAAqB,UACLO,EAAAA,EAAAA,MAAC1B,EAAQ,CAAAmB,SAAA,EACLF,EAAAA,EAAAA,KAACf,EAAS,CAACyB,IAAKF,EAAYG,IAAKvC,KAC7B4B,EAAAA,EAAAA,KAACb,EAAQ,CAAAe,SAAE9B,KACX4B,EAAAA,EAAAA,KAACb,EAAQ,CAAAe,SAAEI,YANZD,EAUJ,SAMlB,C","sources":["api-service/trending-service.js","components/MovieDetails/Cast/Cast.styled.jsx","components/MovieDetails/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n//axios.defaults.baseURL = 'https://api.themoviedb.org/3/trending/movie/day?language=en-US';\n\n// export const API_KEY = '8174f1744af1a46c4588fe70a373352a';\n// const API_KEY = process.env.REACT_APP_API_KEY;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n// axios.defaults.params = {\n//     api_key: API_KEY,\n// };\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NGJmYmIyNTA2NmM5ZTJhNjhkNzA0NmFkNTgxYjBlYyIsInN1YiI6IjY1NmI0YTY5MDg1OWI0MDEzOTUxMmZhMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JHtQht9lLzVGn8qQlSLZwC1_-cT8AoKj26qDOrlg0qc',\n  },\n};\n\nexport const getTrending = async () => {\n    const { data } = await axios.get(\n        'trending/movie/day?language=en-US',\n        options\n    );\n    return data.results;\n    };\n\nexport const getDetailInfoById = async (id) => {\n    const { data } = await axios.get(\n        `/movie/${id}`,\n        options\n    );\n    return data;\n}\n\nexport const getActorsList = async (id) => {\n    const { data } = await axios.get(\n        `movie/${id}/credits`,\n        options\n    );\n    return data.cast;\n}\n\nexport const getMovieReviews = async (id) => {\n    const { data } = await axios.get(\n        `movie/${id}/reviews`,\n        options\n    );\n    return data.results;\n}\n\nexport const SearchMovieByName = async (name) => {\n    const { data } = await axios.get(\n    `search/movie?query=${name}&include_adult=false&language=en-US&page=1`,\n        options\n    );\n    return data;\n}\n\n// import axios from \"axios\";\n\n// const KEY = '8174f1744af1a46c4588fe70a373352a';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n// axios.defaults.params = {\n//   key: KEY,\n// };\n\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NGJmYmIyNTA2NmM5ZTJhNjhkNzA0NmFkNTgxYjBlYyIsInN1YiI6IjY1NmI0YTY5MDg1OWI0MDEzOTUxMmZhMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JHtQht9lLzVGn8qQlSLZwC1_-cT8AoKj26qDOrlg0qc',\n//   },\n// };\n\n// export const getTrending = async () => {\n//   const { data } = await axios.get('trending/movie/day?language=en-US', options);\n//   return data.results;\n// };\n\n// export const getDetailInfoById = async (id) => {\n//   const { data } = await axios.get(`/movie/${id}`, options);\n//   return data;\n// };\n\n// export const getActorsList = async (id) => {\n//   const { data } = await axios.get(`movie/${id}/credits`, options);\n//   return data.cast;\n// };\n\n// export const getMovieReviews = async (id) => {\n//   const { data } = await axios.get(`movie/${id}/reviews`, options);\n//   return data.results;\n// };\n\n// export const SearchMovieByName = async (name) => {\n//   const { data } = await axios.get(`search/movie?query=${name}&include_adult=false&language=en-US&page=1`, options);\n//   return data;\n// };","import styled from \"@emotion/styled\";\n\nexport const GlobalSection = styled.section`\n    display: flex;\n    max-width: 1400px;\n    margin-right: auto;\n    margin-left: auto;\n    gap: 10px;\n`;\n\nexport const GlobalList = styled.ul`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 0;\n`;\n\nexport const GlobalItem = styled.li`\n    list-style-type: none;\n`;\n\nexport const CastList = styled.ul`\n    display: flex;\n    flex-direction: row;\n`;\n\nexport const CastItem = styled.li`\n    list-style-type: none;\n    width: 150px;\n    height: 300px;\n`;\n\nexport const CastImage = styled.img`\n    width: 150px;\n    height: 200px;\n    border-radius: 10%;\n`;\n\nexport const CastText = styled.p`\n    height: 20px; \n    color: gray;\n    margin-top: 5px;\n`;","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getActorsList } from 'api-service/trending-service';\nimport { GlobalSection, GlobalList, GlobalItem, CastList, CastItem, CastImage, CastText } from \"./Cast.styled\";\n\nconst Cast = () => {\n  const [actorsList, setActorsList] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchActorsList = async () => {\n      try {\n        const result = await getActorsList(movieId);\n        // console.log('data: >>', result);\n        setActorsList(result);\n      } catch (error) {\n        console.error('Error fetching actors list:', error);\n      }\n    };\n\n    fetchActorsList();\n  }, [movieId]);\n\n  return (\n      <>\n          <GlobalSection>\n              <GlobalList>\n            \n      {actorsList.map(({ credit_id, name, character, profile_path }) => {\n        const profileUrl = profile_path\n          ? `https://image.tmdb.org/t/p/w300${profile_path}`\n          : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTPZNFpkJSy6LmJ9T9pg7QXLlU-eLWyblScCc1qaDXORkI5fqoQ9-AigZxvBjWjM_J_eEE&usqp=CAU';\n\n          return (\n            <GlobalItem key={credit_id}>\n                <div >\n                  <CastList>\n                      <CastItem>\n                          <CastImage src={profileUrl} alt={name} />\n                              <CastText>{name}</CastText>\n                              <CastText>{character}</CastText>\n                      </CastItem>\n                  </CastList>\n                </div>\n            </GlobalItem>   \n        );     \n      })}             \n              </GlobalList>\n          </GlobalSection>\n        \n    </>\n  );\n};\n\nexport default Cast;\n\n\n// ({ credit_id, name, character, profile_path })"],"names":["axios","options","method","headers","accept","Authorization","getTrending","async","data","results","getDetailInfoById","concat","id","getActorsList","cast","getMovieReviews","SearchMovieByName","name","GlobalSection","styled","_templateObject","_taggedTemplateLiteral","GlobalList","_templateObject2","GlobalItem","_templateObject3","CastList","_templateObject4","CastItem","_templateObject5","CastImage","_templateObject6","CastText","_templateObject7","Cast","actorsList","setActorsList","useState","movieId","useParams","useEffect","result","error","console","fetchActorsList","_jsx","_Fragment","children","map","_ref","credit_id","character","profile_path","profileUrl","_jsxs","src","alt"],"sourceRoot":""}